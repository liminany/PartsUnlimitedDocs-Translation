<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="OmegaT-3.6.0" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>### I: Import Source Code into your VSTS Account with Git</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T080617Z" creationid="liminany" creationdate="20171103T090415Z">
        <seg>## I. 第一部分: 使用Git从TFS/VSTS中导入代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### II.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T065351Z" creationid="liminany" creationdate="20171104T065351Z">
        <seg># II. 第二部分</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### III.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T080042Z" creationid="liminany" creationdate="20171104T080042Z">
        <seg># III. 第三部分 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Pre-requisites: ###
- Complete [Getting Started](../GettingStarted.md) task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T062939Z" creationid="liminany" creationdate="20171103T082501Z">
        <seg>## 准备工作（TFS/VSTS）
- 完成练习： [Getting Started](../GettingStarted.md) .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Tasks Overview: ###</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T063130Z" creationid="liminany" creationdate="20171103T084527Z">
        <seg>## 练习任务概述: </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**1.** Clone the repository to a local directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T063238Z" creationid="liminany" creationdate="20171103T091319Z">
        <seg>## 1. 克隆仓库代码到本地目录.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**1.** Go to your **account’s homepage**:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T070113Z" creationid="liminany" creationdate="20171104T070113Z">
        <seg>## 1. 打开 **我的帐户** 页面:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**1.** Select the **Code** hub and then select your your repo, **HOL**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T080147Z" creationid="liminany" creationdate="20171104T080147Z">
        <seg>## 1.** Select the **Code** hub and then select your your repo, **HOL**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**10.** On the **PowerShell Script** task, click on the blue **rename** pencil icon and change the name of the step to **dotnet restore, build, test and publish** and click **OK**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T072718Z" creationid="liminany" creationdate="20171104T072718Z">
        <seg>## 10. 在 **PowerShell Script** 任务中, 点击蓝色的 **rename** 铅笔 图标,更改名称为 **dotnet restore, build, test and publish** ，然后点击 **OK**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**11.** Configure the Task:
- Select **File Path** for the **Type** property
- Enter **"build.ps1"** for the **Script filename** property
- Set **$(BuildConfiguration) $(System.DefaultWorkingDirectory) $(build.stagingDirectory)** for the **Arguments** property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T073128Z" creationid="liminany" creationdate="20171104T073128Z">
        <seg>## 11.  配置上面添加的任务:
- 为属性 **Type** 的值选择 **File Path** 
- 为属性 **Script filename** 设置值为 **"build.ps1"** 
- 为属性 **Arguments** 设置值为 **$(BuildConfiguration) $(System.DefaultWorkingDirectory) $(build.stagingDirectory)** .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**12.** On the **Publish Test Results** task make the following changes:
- Change the **Test Result Format** to **VSTest**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T074550Z" creationid="liminany" creationdate="20171104T074449Z">
        <seg>## 12. 在 **Publish Test Results** 任务中确保遵循以下修改:
- 修改 **Test Result Format**  为 **VSTest**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**13.** On the **Copy Publish Artifact** task, change the **Copy Root** property to **$(build.stagingDirectory)**, The **Contents** property to **\*\*\\\*.zip**, The **Artifact Name** property to **drop** and the **Artifact Type** to **Server**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T074811Z" creationid="liminany" creationdate="20171104T074811Z">
        <seg>## 13. 在 **Copy Publish Artifact** 任务中, 修改属性 **Copy Root** 为 **$(build.stagingDirectory)**, 修改 **Contents** 为 **\*\*\\\*.zip**, 修改 **Artifact Name** 为 **drop** ，设置 **Artifact Type** 为 **Server**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**14** Select the **Variables** page and a new variable that will be used by the build.ps1 PowerShell script; **BuildConfiguration** with a value of **release**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T075102Z" creationid="liminany" creationdate="20171104T075102Z">
        <seg>## 14** 在 **Variables** 页面，这些变量被用于build.ps1 PowerShell 脚本中; 添加新变量 **BuildConfiguration** ，值为 **release**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**15.** Click on the **Triggers** tab and verify that the **Continuous integration (CI)** option is selected to build the solution every time a change is checked in.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T075400Z" creationid="liminany" creationdate="20171104T075400Z">
        <seg>## 15. 点击 **Triggers** tab页面，确保 **Continuous integration (CI)** 被选中 .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**16.** Click **Save** and give the build definition a name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T075944Z" creationid="liminany" creationdate="20171104T075944Z">
        <seg>## 16.** 点击 **Save**，并为生成定义设置一个名称.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**2.** After clicking **Edit**, add in text (i.e. *This is a test of CI*) after the last *Using* statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T080241Z" creationid="liminany" creationdate="20171104T080241Z">
        <seg>## 2. After clicking **Edit**, add in text (i.e. *This is a test of CI*) after the last *Using* statement.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**2.** Click **Browse** and then select your team project and click
**Navigate**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T070348Z" creationid="liminany" creationdate="20171104T070327Z">
        <seg>## 2.** 点击 **浏览** ,选择团队项目，点击 **导航**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**2.** Navigate to **/src/PartsUnlimitedWebsite/Controllers** in the PartsUnlimited project, then click on the ellipsis to the right of **HomeController.cs** and click **Edit**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T080226Z" creationid="liminany" creationdate="20171104T080226Z">
        <seg>## 2. Navigate to **/src/PartsUnlimitedWebsite/Controllers** in the PartsUnlimited project, then click on the ellipsis to the right of **HomeController.cs** and click **Edit**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**2.** Remove the link to GitHub.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T063805Z" creationid="liminany" creationdate="20171103T092327Z">
        <seg>## 2. 移除对 GitHub 的链接.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**3.** Click **Build** hub.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T080249Z" creationid="liminany" creationdate="20171104T080249Z">
        <seg>## 3. Click **Build** hub.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**3.** Find the URL to access the VSTS Git repo</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T063904Z" creationid="liminany" creationdate="20171103T092906Z">
        <seg>## 3. 找到TFS/VSTS Git 仓库的访问URL</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**3.** Once on the project’s home page, click on the **Build** hub at the top of the page, then on **All Definitions**, and then on **New Definition**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T070634Z" creationid="liminany" creationdate="20171104T070634Z">
        <seg>## 3. 进入主页面后, 点击页面顶部的 **生成** , 然后进入 **所有定义**, 最后点击 **添加生成定义**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**4.** Add the link to VSTS and push your local Git repo</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T064932Z" creationid="liminany" creationdate="20171104T041033Z">
        <seg>## 4. 推送本地仓库到TFS/VSTS，并建立链接r</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**4.** Click on the **Build Number** on the top left and you should get a build summary similar to this, which includes test results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T080303Z" creationid="liminany" creationdate="20171104T080303Z">
        <seg>## 4. Click on the **Build Number** on the top left and you should get a build summary similar to this, which includes test results.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**4.** Click on the **Build Number**, and you should get the build in progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T080256Z" creationid="liminany" creationdate="20171104T080256Z">
        <seg>## 4. Click on the **Build Number**, and you should get the build in progress.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**4.** Select the **Empty** build definition, and then click **Next**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T070742Z" creationid="liminany" creationdate="20171104T070742Z">
        <seg>## 4. 选择 **空定义** 创建生成定义，然后点击 **下一步**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**5.** After clicking the **Next** button:
- Select **HOL Team Project**;
- Select **HOL** Repository;
- Select **Master** as the default branch;
- Check **Continuous Integration**;
- Change the **Default Agent Queue** to **Hosted VS2017**;
- Click **Create**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T071423Z" creationid="liminany" creationdate="20171104T071423Z">
        <seg>## 5. 然后点击 **下一步** :
- 选择 **HOL Team Project**;
- 选择 **HOL** Repository;
- 选择 **Master** 做为默认分支;
- 选择 **Continuous Integration**;
- 把 **Default Agent Queue** 改为 **Hosted VS2017**;
- 点击 **Create**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**6.** After clicking the **Create** button, On the **Build** tab click the **Add build step** in the Build pane.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T072110Z" creationid="liminany" creationdate="20171104T072110Z">
        <seg>## 6. 点击 **Create** 按扭, 在 **Build** tab 页，  **Add build step** 会出现在页面中. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**7.** In the **Add tasks** dialog, select the **Utility** page and then add a **PowerShell** task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T072341Z" creationid="liminany" creationdate="20171104T072341Z">
        <seg>## 7. 在 **Add tasks** 对话框中, 选择 **Utility** 页面，添加一个 **PowerShell** 任务.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**8.** Still in the **Add tasks** dialog, select the **Test** page and add a **Publish Test Results**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T072445Z" creationid="liminany" creationdate="20171104T072445Z">
        <seg>## 8. 还在 **Add tasks** 对话框中,选择 **Test** 页面，添加一个 **Publish Test Results** 任务.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**9.** Select the **Utility** page again and add a **Copy and Publish Artifacts** task and then click on **Close**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T072553Z" creationid="liminany" creationdate="20171104T072553Z">
        <seg>## 9. 选择 **Utility** 页面，添加一个**Copy and Publish Artifacts** 任务，最后点击 **Close** 关闭对话框.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-   An active Visual Studio Team Services account.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T083330Z" creationid="liminany" creationdate="20171103T082521Z">
        <seg>-  一个可用的 TFS(VSTS) 帐号.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- Click on Advanced and change the **Working Folder** to **$(System.DefaultWorkingDirectory)**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T073417Z" creationid="liminany" creationdate="20171104T073417Z">
        <seg>- 点击高级，设置属性 **Working Folder** 值为 **$(System.DefaultWorkingDirectory)**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- On **Search folder** enter the value **$(System.DefaultWorkingDirectory)**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T074630Z" creationid="liminany" creationdate="20171104T074630Z">
        <seg>- 修改 **Search folder** 为 **$(System.DefaultWorkingDirectory)**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- On the **Test Results File** to **\*\*/testresults.xml**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T074610Z" creationid="liminany" creationdate="20171104T074610Z">
        <seg>- 修改 **Test Results File** 为 **\*\*/testresults.xml**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; **Note:** The build.ps1 script contains commands using the **dotnet.exe** executable used by .Net Core.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T074131Z" creationid="liminany" creationdate="20171104T074131Z">
        <seg> **Note:** PS脚本**build.ps1** 使用 .Net Core 的  **dotnet.exe** 执行命令.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; **Note:** To enable Continuous integration in your project, check the **Continuous integration (CI)** checkbox.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T075734Z" creationid="liminany" creationdate="20171104T075734Z">
        <seg> **Note:**  为使持续集成生效，确保勾选 **Continuous integration (CI)** 一项.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; **Note:** We may have multiple repositories and branches, so we need to select the correct Repo and Branch before we can select which Solution to build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T071653Z" creationid="liminany" creationdate="20171104T071653Z">
        <seg>**Note:** 我们通常会有多个仓库，每个仓库的代码都会有多个分支,因此在我们选择构建方案时，需要选择正确的仓库和分支.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; **Talking Point:** For this lab we are using the VSTS Git project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T090736Z" creationid="liminany" creationdate="20171103T090736Z">
        <seg>&gt; **注意:** 这次练习我们采用Git的方式来管理源码.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; Note: VSTS does support GitHub source code integration for use with VSTS builds, but is outside of the scope of this HOL</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T063646Z" creationid="liminany" creationdate="20171103T085356Z">
        <seg>Note: 题外话：TFS/VSTS 目前还不支持通过 VS IDE来创建构建，一般我们通过TFS/VSTS Web门户来实现  </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt;**Note:** As you can see, you can now do Universal Windows Apps &amp; Xamarin Android/IOS Builds as well as Xcode builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T071031Z" creationid="liminany" creationdate="20171104T070924Z">
        <seg>**Note:** 如你所见, 你可以定义UWA通用应用、 Xamarin Android/IOS应用的构建，甚至是Xcode 的构建.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A continuous integration build will give us the ability check whether the code
we checked in can compile and will successfully pass any automated tests that we
have created against it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T070018Z" creationid="liminany" creationdate="20171104T070018Z">
        <seg>定义好的生成定义，使我们可以知道迁入的代码是否编异成功、是否通过自动化测试.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, at the bottom of the web page, you will see the two commands that we will use to push the existing code to VSTS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T093457Z" creationid="liminany" creationdate="20171103T093457Z">
        <seg>另外, 在页面的底部, 你可以看到有两个命令，通过这些命令我们可以把刚才克隆的代码推送到TFS/VSTS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After a few seconds of downloading, all of the code should now be on your local machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T092135Z" creationid="liminany" creationdate="20171103T092135Z">
        <seg>过几分钟，代码应该会被下载到你本地电脑</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also make sure the filter includes the appropriate branch (in this case **master** and **Batch Changes** checkbox is unchecked</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T075609Z" creationid="liminany" creationdate="20171104T075609Z">
        <seg>同样确保 **master** 和 **Batch Changes** 未被选中 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use a web browser to browse to your account, click into your project, and click the Code tab to get to your default Git repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T093319Z" creationid="liminany" creationdate="20171103T093257Z">
        <seg>当然, 你也可以通过浏览器打开你的帐号，进入你的项目，然后在点击 代码 标签页 来获取默认的Git仓库地址:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Clone the repository with the following command.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T091712Z" creationid="liminany" creationdate="20171103T091712Z">
        <seg>使用上面的命令克隆仓库.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create Continuous Integration Build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T065506Z" creationid="liminany" creationdate="20171104T065506Z">
        <seg>创建构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create Continuous Integration Build:** In this step, you will create a build definition that will be triggered every time a commit is pushed to your repository in Visual Studio Team Services.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T085859Z" creationid="liminany" creationdate="20171103T085859Z">
        <seg>创建持续集成构建:** 在这个步骤, 你将定义一个生成，这个生成会在代码每次提交到TFS(VSTS)之后触发.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a parent **Working Directory** on your local file system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T091457Z" creationid="liminany" creationdate="20171103T091457Z">
        <seg>在你的本地系统磁盘中创建一个父目录：**Working Directory**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Feel free to use whatever directory name you like, or leave it blank to use the default directory name:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T092044Z" creationid="liminany" creationdate="20171103T092044Z">
        <seg>当然你也可以克隆到任意目录中，也可以留空，克隆到根目录:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, we need to find the URL to empty Git repository in VSTS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T093023Z" creationid="liminany" creationdate="20171103T093023Z">
        <seg>首先，我们需要找到这个URL来清空我们的TFS/VSTS Git 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, on a Windows OS you can create the following directory:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T091529Z" creationid="liminany" creationdate="20171103T091529Z">
        <seg>比如，在Windows系统中你可以创建这样一个目录:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HOL - Parts Unlimited WebSite Continuous Integration with Visual Studio Team Services
====================================================================================
In this lab we have an application called PartsUnlimited.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T062216Z" creationid="liminany" creationdate="20171103T071747Z">
        <seg># 动手实验 - 通过使用TFS(VSTS) ，为 Parts Unlimited WebSite 项目 添加持续集成 

在这次实验中，我们采用的项目叫作：PartsUnlimited.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you haven't already, create a new team project in your Visual Studio Team Services account that uses Git for source control.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T091242Z" creationid="liminany" creationdate="20171103T091242Z">
        <seg>如果你还没有这份代码，首先要在TFS(VSTS)中创建一个团队项目I，并且源码管理选择Git.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you remember your account name, and the Team Project name you created, the URL to the default Git repo is easily assembled:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T093131Z" creationid="liminany" creationdate="20171103T093131Z">
        <seg>如果你记得自己的帐号, 并且团队项目已创建，这个默认的Git地址很容易得出:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Import Source Code into your VSTS Account:** In this step, you will connect your own Visual Studio Team Services account, download the PartsUnlimited source code, and then push it to your own Visual Studio Team Services account.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T084900Z" creationid="liminany" creationdate="20171103T084900Z">
        <seg>用你的TFS(VSTS)帐号导入源码:** 在这个步骤,你将使用自己的帐号连接到TFS(VSTS)， 下载项目 PartsUnlimited 的郑代码，通过练习后，可以推送代码到你TFS(VSTS)代码仓库.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a Windows OS (and assuming you used HOL as the directory name), you can use this command:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T092248Z" creationid="liminany" creationdate="20171103T092248Z">
        <seg>在Windows系统中 (并且确保你使用的是目录名为HOL), 你可以使用下面的命令:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example below, the clone will be copied into a directory named HOL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T091911Z" creationid="liminany" creationdate="20171103T091911Z">
        <seg>在下面的示例中, 此次克隆的仓库代码会得到到 HOL目录中.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the local directory from Step 1, use the following command to add VSTS as the Git remote named _origin_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T065034Z" creationid="liminany" creationdate="20171104T064653Z">
        <seg>进入步骤1创建的本地目录, 使用下面的命令，在远程仓库创建立名为 _origin_的链接.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Move into the directory that was just created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T092424Z" creationid="liminany" creationdate="20171103T092201Z">
        <seg>进入刚刚创建的目录.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>NOte: the screenshots are out of date and need to be udpated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T062311Z" creationid="liminany" creationdate="20171103T083032Z">
        <seg>NOTE: 上面的帮助文档里面的图片可能已经过期，需要更新，但不影响阅读.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Open a command line (one that supports Git) and change to the directory you created above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T091631Z" creationid="liminany" creationdate="20171103T091631Z">
        <seg>打开Git命令行，并且更改目录为上面创建的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since we won't be using it any longer, we can delete the reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T092708Z" creationid="liminany" creationdate="20171103T092708Z">
        <seg>我们不在使用Github来提交我们的代码，因此我们可以删除这个引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test the CI Trigger in Visual Studio Team Services</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T080125Z" creationid="liminany" creationdate="20171104T080125Z">
        <seg>测试CI 在TFS/VSTS中 被触发</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test the CI Trigger in Visual Studio Team Services:** In this step, test the Continuous Integration build (CI) build we created by changing code in the Parts Unlimited project with Visual Studio Team Services.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T090158Z" creationid="liminany" creationdate="20171103T085955Z">
        <seg>验证CI 的触发:** 在这个步骤, 我们通过修改 Parts Unlimited 项目的代码，并提交到TFS(VSTS)以触发我们定义好的构建.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Git repo you just downloaded currently has a remote called _origin_ that points to the GitHub repo.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T092619Z" creationid="liminany" creationdate="20171103T092411Z">
        <seg>刚刚下载的 Git仓库 会通过一个叫 _orgin_ 的配置项指向Github仓库.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build script does the following: restore, build, test, publish, and produce an MSDeploy zip package.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T074333Z" creationid="liminany" creationdate="20171104T074333Z">
        <seg>这些生成脚本执行: restore, build, test, publish, 等动作， 并生成一个  MSDeploy 格式的 zip包.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next couple of steps will allow you to add the PartUnlimited source to the Git master repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T091000Z" creationid="liminany" creationdate="20171103T091000Z">
        <seg>在接下来的一系列步骤中，我们使用添加PartUnlimited 源码到Git主仓库.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two approaches to doing this: a) Use the Git command line, or b) Use Visual Studio.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T085049Z" creationid="liminany" creationdate="20171103T085049Z">
        <seg>有两种方式来完成: a) 使用Git 命令行工具,  b) 或者使用宇届第一强IDE： Visual Studio 2017.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that whenever code is committed and pushed to the
master branch, we want to ensure that it integrates into our code correctly to
get fast feedback.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T081827Z" creationid="liminany" creationdate="20171103T081827Z">
        <seg>也就是说，在我们的代码提交和推送给主分支后，我想确保代码被正确集成，并可以快速获得反馈.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To delete the GitHub remote, use:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T092728Z" creationid="liminany" creationdate="20171103T092728Z">
        <seg>要移除这个引用，我们可以使用以下命令：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do so, we are going to be setting up a Continuous Integration build (CI) that
will allow us to compile and run unit tests on our code every time a commit is
pushed to Visual Studio Team Services.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T082359Z" creationid="liminany" creationdate="20171103T082359Z">
        <seg>为此, 我们需要配置 我们的构建来完成持续集成  (CI)，使我们的代码一旦提交到TFS(VSTS)，可以自动触发编异、单元测试等动作作.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We want to push the application code to your Visual Studio Team Services account in
order to use VSTS Build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T090608Z" creationid="liminany" creationdate="20171103T090608Z">
        <seg>为了能够使用TFS(VSTS)的持续集成功能，我们先要把代码导入到自己的代码仓库中.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We want to set up
Visual Studio Team Services to be able continuously integrate code into the master
branch of code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T081604Z" creationid="liminany" creationdate="20171103T081448Z">
        <seg>我们通过配置TFS(VSTS) ，可以为主分支代码增加 持续集成 的能力.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can either type the URL you found in Step 3, or simply copy the first command from the VSTS web page.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T065142Z" creationid="liminany" creationdate="20171104T065142Z">
        <seg>你也可以输入步骤3里面的URL地址, 或者从TFS/VSTS Web页面获取这个URL地址.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can paste in the URL if you copied it in Step 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171103T091747Z" creationid="liminany" creationdate="20171103T091747Z">
        <seg>你可以把步骤 1 复制的URL 粘贴过来.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can select which branch you wish to monitor, as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T075808Z" creationid="liminany" creationdate="20171104T075808Z">
        <seg>当然你也可以根据项目的需要选择特定的分支代码进行持续集成.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[Sign up for Visual Studio Team Services](https://www.visualstudio.com/en-us/docs/setup-admin/team-services/sign-up-for-visual-studio-team-services)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T063046Z" creationid="liminany" creationdate="20171103T082623Z">
        <seg>- 可参考的文档：　[如何 注册和设置 TFS](#)　　　　　[如何 注册和设置 Visual Studio Team Services](https://www.visualstudio.com/en-us/docs/setup-admin/team-services/sign-up-for-visual-studio-team-services) </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>git remote add origin https://&lt;account&gt;.visualstudio.com\&lt;project&gt;\_git\&lt;project&gt;
Now you can push the code, including history, to VSTS:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="liminany" changedate="20171104T065313Z" creationid="liminany" creationdate="20171104T065313Z">
        <seg>git remote add origin https://&lt;account&gt;.visualstudio.com\&lt;project&gt;\_git\&lt;project&gt;
现在你可以推送代码了到TFS/VSTS，包括提交的历史记录:</seg>
      </tuv>
    </tu>
    <tu>
      <note>they are left as is for not to provide some guidance if it is needed
</note>
      <tuv lang="EN-US">
        <seg>they are left as is for not to provide some guidance if it is needed.</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
